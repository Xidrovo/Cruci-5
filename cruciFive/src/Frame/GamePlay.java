/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frame;

import Atxy2k.CustomTextField.RestrictedTextField;
import crucifive.Tablero;
import java.awt.Color;
import java.awt.GridLayout;
import javax.swing.JPanel;
import javax.swing.JTextField;
import crucifive.Diccionario;
import crucifive.Palabra;
import crucifive.PalabraT;
import crucifive.Posicion;
import java.applet.AudioClip;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.Iterator;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author fernando
 */
public class GamePlay extends javax.swing.JFrame {

    /**
     * Creates new form GamePlay
     */
    private JTextField m[][];
    private  RestrictedTextField r[][];
    private JPanel paneljuego = new JPanel();
    private Diccionario Dictionary = new Diccionario();
    private AudioClip sonido;
    private int segundos = 0, minutos = 0;
    private Tablero tableau = new Tablero();
    private static int palabraHorizontal = 1;
    private static int palabraVertical = 1;
    private MouseAdapter mouseListener[][];
    
    
    public GamePlay() {
        initComponents();
        setLocationRelativeTo(null);
        Timer t = new Timer(1000, acciones);
        t.start();
        Horizontal.setSelected(true);
        setResizable(false);
        X.setVisible(false);
        Y.setVisible(false);
        Xseleccionado.setVisible(false);
        Yseleccionado.setVisible(false);
        sonido = java.applet.Applet.newAudioClip(getClass().getResource("../SoundTrack/EnglishMan.wav"));
        sonido.play();
        sonido.loop();
        setResizable(false);
        setPista();
        TituloDiccionario.setText( Dictionary.getName() );
        Tablero holi=new Tablero();
        crearTablero(14,14);
        Crucigram.add(paneljuego);
        escribirPistas();

    }
    
    private ActionListener acciones = new ActionListener(){
        @Override
        public void actionPerformed(ActionEvent ae)
        {
            segundos++;
            if (segundos == 60)
            {
                minutos++;
                segundos = 0;
            }
            actualizarTiempo();
        }
    };
            
     public void actualizarTiempo()
     {
         String cronometro = new String();
         if (minutos <= 9){
             if (segundos <= 9)
                 cronometro = "0" + minutos + ":" + "0" + segundos;
             else
                 cronometro = "0" + minutos + ":" + segundos;             
         }
         else
         {
             if (segundos < 9)
             {
                 cronometro = minutos + ":" + "0" + segundos;
             }
             else
                 cronometro = minutos + ":" + segundos;
         }
         TiempoAdv.setText(cronometro);
     }
     
     public void escribirPistas()
     {
         Tablero tableu = new Tablero();
         LinkedList<PalabraT> palabrit = new LinkedList();
         PalabraT temp = new PalabraT();
         Palabra wordtemp = new Palabra();
         palabrit = tableu.getListaPalabraT();
         Iterator<PalabraT> iterador = palabrit.iterator();
         palabraHorizontal = 1;
         palabraVertical = 1;

         while(iterador.hasNext() )
         {
             temp = iterador.next();
             wordtemp = temp.getWord();
             
             if (temp.isOrientacion() )
             {
                 HorizontalClue.setText(HorizontalClue.getText() + palabraHorizontal + ".- " + wordtemp.getPista() + "\r\n" );
                 palabraHorizontal++;
             }
             
             if (temp.isOrientacion() == false)
             {
                 VerticalClue.setText(VerticalClue.getText() + palabraVertical + ".- " + wordtemp.getPista() + "\r\n");
                 palabraVertical++;
             }
         }
         
         
     }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        PositionButton = new javax.swing.ButtonGroup();
        Crucigram = new javax.swing.JPanel();
        DictionaryPanel = new javax.swing.JPanel();
        TituloDiccionario = new javax.swing.JTextField();
        X = new javax.swing.JTextField();
        Y = new javax.swing.JTextField();
        Xseleccionado = new javax.swing.JTextField();
        Yseleccionado = new javax.swing.JTextField();
        TimePanel = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        TiempoAdv = new javax.swing.JLabel();
        PistaPanel = new javax.swing.JPanel();
        HorizontalLabel = new javax.swing.JLabel();
        HorizontalCluePanel = new javax.swing.JScrollPane();
        HorizontalClue = new javax.swing.JTextArea();
        VerticalLabel = new javax.swing.JLabel();
        VerticalCluePanel = new javax.swing.JScrollPane();
        VerticalClue = new javax.swing.JTextArea();
        ButtonsPannel = new javax.swing.JPanel();
        HorizontalButtonPanel = new javax.swing.JPanel();
        Horizontal = new javax.swing.JRadioButton();
        VerticalButtonPanel = new javax.swing.JPanel();
        Vertical = new javax.swing.JRadioButton();
        ControlPanel = new javax.swing.JPanel();
        VERIFIED = new javax.swing.JButton();
        GIVEUP = new javax.swing.JButton();
        SAVE = new javax.swing.JButton();
        QUIT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Crucigram.setBackground(new java.awt.Color(255, 51, 51));

        javax.swing.GroupLayout CrucigramLayout = new javax.swing.GroupLayout(Crucigram);
        Crucigram.setLayout(CrucigramLayout);
        CrucigramLayout.setHorizontalGroup(
            CrucigramLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        CrucigramLayout.setVerticalGroup(
            CrucigramLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 477, Short.MAX_VALUE)
        );

        TituloDiccionario.setFont(new java.awt.Font("Earth", 0, 18)); // NOI18N
        TituloDiccionario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TituloDiccionario.setText("(Dictionary here)");
        TituloDiccionario.setEnabled(false);
        TituloDiccionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TituloDiccionarioActionPerformed(evt);
            }
        });

        X.setText("jTextField1");

        Y.setText("jTextField2");

        Xseleccionado.setText("jTextField2");

        Yseleccionado.setText("jTextField2");

        javax.swing.GroupLayout DictionaryPanelLayout = new javax.swing.GroupLayout(DictionaryPanel);
        DictionaryPanel.setLayout(DictionaryPanelLayout);
        DictionaryPanelLayout.setHorizontalGroup(
            DictionaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DictionaryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DictionaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TituloDiccionario)
                    .addGroup(DictionaryPanelLayout.createSequentialGroup()
                        .addComponent(X, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Xseleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Yseleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        DictionaryPanelLayout.setVerticalGroup(
            DictionaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DictionaryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TituloDiccionario, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(DictionaryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(X, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Y, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Xseleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Yseleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTextField3.setFont(new java.awt.Font("Earth", 0, 14)); // NOI18N
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setText("(SCORE HERE)");
        jTextField3.setEnabled(false);
        jTextField3.setFocusable(false);

        TiempoAdv.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        TiempoAdv.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TiempoAdv.setText("(Tiempo)");

        javax.swing.GroupLayout TimePanelLayout = new javax.swing.GroupLayout(TimePanel);
        TimePanel.setLayout(TimePanelLayout);
        TimePanelLayout.setHorizontalGroup(
            TimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TimePanelLayout.createSequentialGroup()
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TimePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TiempoAdv, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        TimePanelLayout.setVerticalGroup(
            TimePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TimePanelLayout.createSequentialGroup()
                .addComponent(TiempoAdv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        HorizontalLabel.setText("Horizontal");

        HorizontalClue.setEditable(false);
        HorizontalClue.setColumns(20);
        HorizontalClue.setRows(5);
        HorizontalCluePanel.setViewportView(HorizontalClue);

        VerticalLabel.setText("Vertical");

        VerticalClue.setEditable(false);
        VerticalClue.setColumns(20);
        VerticalClue.setRows(5);
        VerticalCluePanel.setViewportView(VerticalClue);

        javax.swing.GroupLayout PistaPanelLayout = new javax.swing.GroupLayout(PistaPanel);
        PistaPanel.setLayout(PistaPanelLayout);
        PistaPanelLayout.setHorizontalGroup(
            PistaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(HorizontalCluePanel)
            .addGroup(PistaPanelLayout.createSequentialGroup()
                .addGroup(PistaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PistaPanelLayout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(HorizontalLabel))
                    .addGroup(PistaPanelLayout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(VerticalLabel)))
                .addContainerGap())
            .addComponent(VerticalCluePanel)
        );
        PistaPanelLayout.setVerticalGroup(
            PistaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PistaPanelLayout.createSequentialGroup()
                .addComponent(HorizontalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HorizontalCluePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(VerticalLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VerticalCluePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        ButtonsPannel.setLayout(new java.awt.GridLayout(1, 0));

        HorizontalButtonPanel.setLayout(new java.awt.GridBagLayout());

        PositionButton.add(Horizontal);
        Horizontal.setText("Horizontal");
        HorizontalButtonPanel.add(Horizontal, new java.awt.GridBagConstraints());

        ButtonsPannel.add(HorizontalButtonPanel);

        VerticalButtonPanel.setLayout(new java.awt.GridBagLayout());

        PositionButton.add(Vertical);
        Vertical.setText("Vertical");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 129, 45, 133);
        VerticalButtonPanel.add(Vertical, gridBagConstraints);

        ButtonsPannel.add(VerticalButtonPanel);

        ControlPanel.setLayout(new java.awt.GridLayout(2, 2));

        VERIFIED.setText("¡VERIFIED!");
        ControlPanel.add(VERIFIED);

        GIVEUP.setText("¡GIVE UP!");
        ControlPanel.add(GIVEUP);

        SAVE.setText("SAVE");
        ControlPanel.add(SAVE);

        QUIT.setText("QUIT");
        QUIT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                QUITMouseClicked(evt);
            }
        });
        ControlPanel.add(QUIT);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ButtonsPannel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Crucigram, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DictionaryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TimePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PistaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ControlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(TimePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DictionaryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PistaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Crucigram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(ButtonsPannel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 18, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(ControlPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TituloDiccionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TituloDiccionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TituloDiccionarioActionPerformed

    private void QUITMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_QUITMouseClicked
        // TODO add your handling code here:
        sonido.stop();
        dispose();
    }//GEN-LAST:event_QUITMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GamePlay.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GamePlay().setVisible(true);
            }
        });
    }
    
    public void setPista(){
    
    }
    public void Colorear(JTextField[][] m)
    {
        Tablero tableu = new Tablero();
        LinkedList<PalabraT> ListPalabraT = tableu.getListaPalabraT();
        PalabraT palabriT = new PalabraT();
        Iterator<PalabraT> iterador = ListPalabraT.iterator();
        Posicion indice = new Posicion(0,0);
        while (iterador.hasNext() )
        {
            palabriT = iterador.next();
            indice = palabriT.getPosicioni();
            if (palabriT.isOrientacion())
            {
                m[indice.getX()][indice.getY()].setBackground(Color.CYAN);
                m[indice.getX()][indice.getY()].setText("" + palabraHorizontal);
                palabraHorizontal++;
            }
            
            if(palabriT.isOrientacion() == false){
                m[indice.getX()][indice.getY()].setBackground(Color.GREEN);
                m[indice.getX()][indice.getY()].setText("" + palabraVertical);
                palabraVertical++;
            }
        }
    }
    public void crearTablero(int x, int y)
    {
         m= new JTextField[x][y];
         r= new RestrictedTextField[x][y];
         paneljuego= new JPanel();
         paneljuego.setLayout(new GridLayout (x,y));
         paneljuego.setBackground(Color.magenta);
         paneljuego.setBounds(50, 50, y*27,x*27);
         mouseListener= new MouseAdapter[x][y];
         
        Tablero holi = new Tablero();

         
        for(int i=0;i<x; i++)
        {
            for(int j=0;j<y;j++)
            {
                m[i][j]=new JTextField();
                r[i][j] = new RestrictedTextField(m[i][j]);
                r[i][j].setLimit(1);
                if(holi.matrizSolucion[i][j]=='0')
                {
                    m[i][j].setText(" ");
                    m[i][j].setVisible(false);
                }
                else
                {
                    m[i][j].setText("");
                    m[i][j].setBackground(Color.white);
                }
                
               // m[i][j].setSize(5,10);
                m[i][j].setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
                m[i][j].setHorizontalAlignment(javax.swing.JTextField.CENTER);
                X.setText(""+i);
                Y.setText(""+j);
                mouseListener[i][j] = new MouseAdapter() {
            public void mouseClicked(MouseEvent mouseEvent) {
                m[Integer.parseInt(X.getText())][Integer.parseInt(Y.getText())] = (JTextField) mouseEvent.getSource();
                if (mouseEvent.getClickCount() == 1) {
                    Xseleccionado.setText(""+m[Integer.parseInt(X.getText())][Integer.parseInt(Y.getText())].getY()/27);
                    Yseleccionado.setText(""+m[Integer.parseInt(X.getText())][Integer.parseInt(Y.getText())].getX()/27);
                }
            }
        };
        
            m[i][j].addMouseListener(mouseListener[i][j]);
                
                paneljuego.add(m[i][j]);
                
            }
            
        }
        Colorear(m);
    }

   
    public Posicion posicionSeleccionada(){
        
      Posicion posi= new Posicion(Integer.parseInt(Xseleccionado.getText()),Integer.parseInt(Xseleccionado.getText()));
          return posi;
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ButtonsPannel;
    private javax.swing.JPanel ControlPanel;
    private javax.swing.JPanel Crucigram;
    private javax.swing.JPanel DictionaryPanel;
    private javax.swing.JButton GIVEUP;
    private javax.swing.JRadioButton Horizontal;
    private javax.swing.JPanel HorizontalButtonPanel;
    private javax.swing.JTextArea HorizontalClue;
    private javax.swing.JScrollPane HorizontalCluePanel;
    private javax.swing.JLabel HorizontalLabel;
    private javax.swing.JPanel PistaPanel;
    private javax.swing.ButtonGroup PositionButton;
    private javax.swing.JButton QUIT;
    private javax.swing.JButton SAVE;
    private javax.swing.JLabel TiempoAdv;
    private javax.swing.JPanel TimePanel;
    private javax.swing.JTextField TituloDiccionario;
    private javax.swing.JButton VERIFIED;
    private javax.swing.JRadioButton Vertical;
    private javax.swing.JPanel VerticalButtonPanel;
    private javax.swing.JTextArea VerticalClue;
    private javax.swing.JScrollPane VerticalCluePanel;
    private javax.swing.JLabel VerticalLabel;
    private javax.swing.JTextField X;
    private javax.swing.JTextField Xseleccionado;
    private javax.swing.JTextField Y;
    private javax.swing.JTextField Yseleccionado;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
